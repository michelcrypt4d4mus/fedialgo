import { ScorerDict, StorageKey } from "./types";
export declare const SECONDS_IN_MINUTE = 60;
export declare const SECONDS_IN_HOUR: number;
export declare const SECONDS_IN_DAY: number;
export declare const SECONDS_IN_WEEK: number;
type StaleDataConfig = {
    [key in StorageKey]?: number;
};
export type ConfigType = {
    country: string;
    defaultLanguage: string;
    language: string;
    locale: string;
    excessiveTags: number;
    hashtagTootRetrievalDelaySeconds: number;
    homeTimelineBatchSize: number;
    incrementalLoadDelayMS: number;
    lookbackForUpdatesMinutes: number;
    maxCachedTimelineToots: number;
    maxTimelineDaysToFetch: number;
    numDesiredTimelineToots: number;
    scoringBatchSize: number;
    staleDataDefaultSeconds: number;
    timelineDecayExponent: number;
    numParticipatedTagsToFetchTootsFor: number;
    numParticipatedTagToots: number;
    numParticipatedTagTootsPerTag: number;
    backgroundLoadIntervalSeconds: number;
    batchCompleteTootsSize: number;
    batchCompleteTootsSleepBetweenMS: number;
    defaultRecordsPerPage: number;
    maxConcurrentRequestsBackground: number;
    maxConcurrentRequestsInitial: number;
    maxFollowingAccountsToPull: number;
    maxRecordsForFeatureScoring: number;
    minRecordsForFeatureScoring: number;
    mutexWarnSeconds: number;
    staleDataSeconds: StaleDataConfig;
    timeoutMS: number;
    staleDataTrendingSeconds: number;
    minServerMAU: number;
    numServersToCheck: number;
    excessiveTagsPenalty: number;
    invalidTrendingTags: string[];
    minTrendingTagTootsForPenalty: number;
    numTootsPerTrendingTag: number;
    numDaysToCountTrendingTagData: number;
    numTrendingLinksPerServer: number;
    numTrendingTags: number;
    numTrendingTagsPerServer: number;
    numTrendingTagsToots: number;
    numTrendingTootsPerServer: number;
    defaultServers: string[];
    foreignLanguageServers: Record<string, string[]>;
    noMauServers: string[];
    noTrendingLinksServers: string[];
    isAppFilterVisible: boolean;
};
export declare const Config: ConfigType;
export declare function setLocale(locale?: string): void;
export declare const SCORERS_CONFIG: ScorerDict;
export {};
