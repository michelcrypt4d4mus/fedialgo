import Account from "./api/objects/account";
import Toot from './api/objects/toot';
import { Config } from "./config";
import { FeedFilterSettings, StorableObj, StorageKey, TrendingStorage, UserData, Weights } from "./types";
export default class Storage {
    static config: Config;
    static getConfig(): Config;
    static getWeightings(): Promise<Weights>;
    static setWeightings(userWeightings: Weights): Promise<void>;
    static getFilters(): Promise<FeedFilterSettings>;
    static setFilters(filters: FeedFilterSettings): Promise<void>;
    static getUserData(): Promise<UserData>;
    static logAppOpen(): Promise<void>;
    static getIdentity(): Promise<Account | null>;
    static setIdentity(user: Account): Promise<void>;
    static getFeed(): Promise<Toot[]>;
    static setFeed(timeline: Toot[]): Promise<void>;
    static getToots(key: StorageKey): Promise<Toot[]>;
    static storeToots(key: StorageKey, toots: Toot[]): Promise<void>;
    static getTrending(): Promise<TrendingStorage>;
    static isDataStale(dataDescriptor?: string | StorageKey): Promise<boolean>;
    static secondsSinceLastOpened(): Promise<number | undefined>;
    static secondsSinceLastUpdated(key: StorageKey): Promise<number | null>;
    static get(key: StorageKey): Promise<StorableObj | null>;
    static set(key: StorageKey, value: StorableObj): Promise<void>;
    static remove(key: StorageKey): Promise<void>;
    private static getLastOpenedTimestamp;
    private static getNumAppOpens;
    private static secondsSinceMostRecentToot;
    private static buildKey;
}
